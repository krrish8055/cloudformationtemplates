Parameters:
  KeyName:
    Description: The EC2 Key Pair to allow SSH access to the instance
    Type: AWS::EC2::KeyPair::KeyName
    ConstraintDescription: must be the name of an existing EC2 KeyPair.
  SSHLocation:
    Description: The IP address range that can be used to SSH to the EC2 instances
    Type: String
    MinLength: '9'
    MaxLength: '18'
    Default: 0.0.0.0/0
    AllowedPattern: '(\d{1,3})\.(\d{1,3})\.(\d{1,3})\.(\d{1,3})/(\d{1,2})'
    ConstraintDescription: must be a valid IP CIDR range of the form x.x.x.x/x.
  EC2InstanceType:
    Description: WebServer EC2 instance type, ignore if you choose Production Env.
    Type: String
    Default: None
    AllowedValues:
      - None 
      - t2.nano
      - t2.micro
      - t2.small
      - t2.medium
      - t2.large
      - t2.xlarge
      - t2.2xlarge
      - t3.micro
      - t3.nano
      - t3.small
      - t3.medium

Mappings:
  RegionMap:
    us-east-1:
      AMI: ami-0fc5d935ebf8bc3bc
    us-east-2:
      AMI: ami-0a91cd140a1fc148a
    us-west-1:
      AMI: ami-00831fc7c1e3ddc60
    us-west-2:
      AMI: ami-07dd19a7900a1f049
    af-south-1:
      AMI: ami-00eedb3635fd5855b
    ap-east-1:
      AMI: ami-05a91585feddbc79e
    ap-south-1:
      AMI: ami-068257025f72f470d
    ap-northeast-2:
      AMI: ami-093ca05411b2f0a18
    ap-southeast-1:
      AMI: ami-0bb1a05e6e03be66c
    ap-southeast-2:
      AMI: ami-00c98fdd264648a69
    ap-northeast-1:
      AMI: ami-0af971be07bef8f60
    ca-central-1:
      AMI: ami-0f4fed2cf2c5372b7
    eu-central-1:
      AMI: ami-096a99b22bcd2a655
    eu-west-1:
      AMI: ami-0d337ee69f627b10c
    eu-west-2:
      AMI: ami-0e29aec7ec7c6f354
    eu-south-1:
      AMI: ami-05e022be1ecd0b8e3
    eu-west-3:
      AMI: ami-0a79a6735f5a6484f
    eu-north-1:
      AMI: ami-0a7340bdff099b90e
    me-south-1:
      AMI: ami-04b65700efd014c7e
    sa-east-1:
      AMI: ami-07b14488da8ea02a0
             
Resources:
  WebServer:
    Type: 'AWS::EC2::Instance'
    Properties:
      SecurityGroups:
        - !Ref InstanceSecurityGroup
      KeyName: !Ref KeyName
      ImageId: !FindInMap 
        - RegionMap
        - !Ref AWS::Region
        - AMI
      InstanceType: !Ref EC2InstanceType
      UserData:
          Fn::Base64: |
            #!/bin/bash
            mkdir /tmp/ssm
            cd /tmp/ssm
            wget https://s3.amazonaws.com/ec2-downloads-windows/SSMAgent/latest/debian_amd64/amazon-ssm-agent.deb
            sudo dpkg -i amazon-ssm-agent.deb
            sudo systemctl enable amazon-ssm-agent
            sudo apt-get update -y
            sudo apt-get -y install \
                apt-transport-https \
                ca-certificates \
                curl \
                gnupg-agent \
                software-properties-common
            curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo apt-key add -
            sudo apt-key fingerprint 0EBFCD88
            sudo add-apt-repository \
               "deb [arch=amd64] https://download.docker.com/linux/ubuntu \
               $(lsb_release -cs) \
               stable"
            sudo apt-get update
            sudo apt-get -y install docker-ce docker-ce-cli containerd.io
            sudo curl -L "https://github.com/docker/compose/releases/download/1.27.4/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
            sudo chmod +x /usr/local/bin/docker-compose
            sudo apt-get install nginx -y
            sudo systemctl start nginx

   
  InstanceSecurityGroup:
    Type: 'AWS::EC2::SecurityGroup'
    Properties:
      GroupDescription: Enable SSH access via port 22
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 22
          ToPort: 22
          CidrIp: !Ref SSHLocation
        - IpProtocol: tcp
          FromPort: 80
          ToPort: 80
          CidrIp: 0.0.0.0/0

        


        
