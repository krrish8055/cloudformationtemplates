AWSTemplateFormatVersion: '2010-09-09'
Metadata:
  License: Apache-2.0
Description: 'AWS CloudFormation Sample Template EC2_Instance_With_Ephemeral_Drives:
  Example to show how to attach ephemeral drives using EC2 block device mappings.
  **WARNING** This template creates an Amazon EC2 instance. You will be billed for
  the AWS resources used if you create a stack from this template.'
Parameters:
  KeyName:
    Description: Name of an existing EC2 KeyPair to enable SSH access to the web server
    Type: AWS::EC2::KeyPair::demo
    ConstraintDescription: must be the name of an existing EC2 KeyPair.
  InstanceType:
    Description: WebServer EC2 instance type
    Type: String
    Default: t2.micro
    AllowedValues: [t2.nano, t2.micro, t2.small, t2.medium, t2.large, t2.xlarge, t2.2xlarge,
      t3.nano, t3.micro, t3.small, t3.medium, t3.large, t3.xlarge, t3.2xlarge,
      m4.large, m4.xlarge, m4.2xlarge, m4.4xlarge, m4.10xlarge,
      m5.large, m5.xlarge, m5.2xlarge, m5.4xlarge,
      c5.large, c5.xlarge, c5.2xlarge, c5.4xlarge, c5.9xlarge,
      g3.8xlarge,
      r5.large, r5.xlarge, r5.2xlarge, r5.4xlarge, r3.12xlarge,
      i3.xlarge, i3.2xlarge, i3.4xlarge, i3.8xlarge,
      d2.xlarge, d2.2xlarge, d2.4xlarge, d2.8xlarge]
    ConstraintDescription: must be a valid EC2 instance type.
  SSHLocation:
    Description: Lockdown SSH access to the bastion host (default can be accessed
      from anywhere)
    Type: String
    MinLength: '9'
    MaxLength: '18'
    Default: 0.0.0.0/0
    AllowedPattern: (\d{1,3})\.(\d{1,3})\.(\d{1,3})\.(\d{1,3})/(\d{1,2})
    ConstraintDescription: must be a valid CIDR range of the form x.x.x.x/x.
  WEBLocation:
    Description: Lockdown SSH access to the bastion host (default can be accessed
      from anywhere)
    Type: String
    MinLength: '9'
    MaxLength: '18'
    Default: 0.0.0.0/0
    AllowedPattern: (\d{1,3})\.(\d{1,3})\.(\d{1,3})\.(\d{1,3})/(\d{1,2})
    ConstraintDescription: must be a valid CIDR range of the form x.x.x.x/x.
  LatestAmiId:
    Type:  'AWS::SSM::Parameter::Value<AWS::EC2::Image::Id>'
    Default: '/aws/service/ami-amazon-linux-latest/amzn2-ami-hvm-x86_64-gp2'
Resources:
  EC2Instance:
    Type: AWS::EC2::Instance
    Properties:
      InstanceType: 't2.micro'
      SecurityGroups: [ 'sdDemosvr' ]
      KeyName: 'demo'
      ImageId: 'ami-0817d428a6fb68645'
      BlockDeviceMappings:
      - DeviceName: '/dev/sdc'
        VirtualName: ephemeral0
      UserData:
        Fn::Base64: !Sub |
          #!/bin/bash -xe
          apt update -y
          apt install -y httpd
          service httpd start
          chkconfig httpd on
          host_name=`curl -s http://169.254.169.254/latest/meta-data/local-hostname`
          echo "hi there from $host_name" > /var/www/html/index.html
          echo "done"
  EC2SecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: SSH access
      SecurityGroupIngress:
      - IpProtocol: tcp
        FromPort: '22'
        ToPort: '22'
        FromPort: '80'
        ToPort: '80'
        CidrIp: '0.0.0.0/0'
   NetworkInterfaces:
      - Description: Primary network interface
        DeviceIndex: "0"
        VpcId: "vpc-07b7ad7d"
        SubnetId: "subnet-57ec2608"
        PrivateIpAddress: "172.31.32.4"
        GroupSet:
        - Ref: SecurityGroupDemoSvrTraffic

Outputs:
  Instance:
    Value: !GetAtt [EC2Instance, PublicDnsName]
    Description: DNS Name of the newly created EC2 instance
